@page
@model IndexModel
@{
	ViewData["Title"] = "Home page";
}

<h3 class="mt-5 mb-3">등록된 앱 목록 (@Model.Domains.Count 개)</h3>
<ol class="p-3">
	@foreach (var address in Model.Domains)
	{
		<li class="mb-3">
			<span class="mr-2">@address</span>
			<button class="btn btn-danger" onclick="removeAddress('@address')">삭제</button>
		</li>
	}
</ol>
	
<form id="addDomainForm" class="form-inline">
	<input type="text" class="form-control mr-1 w-50" id="address" placeholder="ex) http://hello.com" style="max-width:400px;"/>
	<button type="submit" class="btn btn-primary">추가</button>
</form>

<script type="text/javascript">
	const addDomainForm = document.getElementById("addDomainForm");
	addDomainForm.addEventListener("submit", async (e) => {
		e.preventDefault();
		try {
			var data = await axios.post(`/api/domain/${btoa(e.target.address.value)}/@Model.Guid`);
			console.log(data);
		} catch (err) {
			alert("추가에 실패했습니다")
			console.error(err);
		}

		//hack 맨 처음 페이지 로드하면 추가된게 적용이 안됨(캐시 때문인듯?)
		setTimeout(() => location.reload(), 10);
	});

	const removeAddress = async (address) => {
		if (!confirm(`'${address}'를 삭제하시겠습니까?`)) {
			return;
		}

		try {
			var data = await axios.delete(`/api/domain/${btoa(address)}/@Model.Guid`);
			console.log(data);
		} catch (err) {
			alert("삭제에 실패했습니다")
			console.error(err);
		}
		location.reload();
	}
</script>